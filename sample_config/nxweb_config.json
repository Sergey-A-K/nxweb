/* NXWEB sample config file */
{

    // uncomment if needed
    // "drop_privileges":{ // these settings can be overriden by command-line arguments
    //   "group":"www-data", "user":"www-data",
    // },

    // load custom C modules compiled into shared libraries
    "load":[
        {"so":"modules/sample_modules.so"}
    ],

    // interfaces can be overriden by command-line arguments
    "listen": [
        {"interface":":80",  "backlog":4096},
        {"interface":":443", "backlog":1024, "secure":true,
            "cert":"ssl/server_cert.pem",
            "key":"ssl/server_key.pem",
            "dh":"ssl/dh.pem",
            "priorities":"NORMAL:+VERS-TLS-ALL:+COMP-ALL:-CURVE-ALL:+CURVE-SECP256R1"
        }
    ],

    "backends":{
        "backend1":{"connect":"localhost:8000"},
        "backend2":{"connect":"localhost:8080"}
    },

    // can't set error log here; it is opened before parsing this config file; use command line switch for that
    "logging":{
        "log_level":"WARN",
        "access_log":"nxweb_access_log"
    },

    "modules":{

        "python3":{
            "project_path":"python3", // python module search root; relative to workdir
            "wsgi_application":"main.app" // full python name of WSGI entry point
        },

        "image_filter":{
            "allowed_cmds":[
            {"cmd":"scale", "width":50, "height":50}, // eg. /path/to/image.50x50.jpg
            {"cmd":"crop", "width":50, "height":50}, // eg. /path/to/image.c50x50.jpg
            {"cmd":"scale", "width":100, "height":100}, // eg. /path/to/image.100x100.jpg
            {"cmd":"crop", "width":100, "height":100}, // eg. /path/to/image.c100x100.jpg
            {"cmd":"crop", "width":200, "height":100}, // eg. /path/to/image.c200x100.jpg
            {"cmd":"fill", "width":100, "height":100, "bgcolor":"#FF8800"}, // eg. /path/to/image.f100x100xFF8800.jpg
            {"cmd":"fill", "width":500, "height":500, "bgcolor":"#FF8800"}  // eg. /path/to/image.f500x500xFF8800.jpg
            ],
            // don't forget to change secret key in your setup
            "sign_key":"xbLBZeqSsUgfKWooMKoh0r1gjzqG856yVCMLf1pz"
        },

        "draw_filter":{
            "font_file":"fonts/Sansation/Sansation_Bold.ttf"
        }
    },

    "routing":[

    // see modules/benchmark.c
    { "prefix":"/benchmark-inprocess", "handler":"benchmark_inprocess" },


    // see modules/benchmark.c
    { "prefix":"/benchmark-inworker", "handler":"benchmark_inworker" },


    { // see modules/benchmark.c
        "prefix":"/test", "handler":"test"
    },
    { // see modules/hello.c
        "prefix":"/hello", "handler":"hello",
        "filters":[
        {"type":"cors", "allow_hosts":[], "allow_credentials":true, "max_age":"3600"},
        {"type":"gzip", "compression":4}
        ]
    },
    { // see modules/upload.c
        "prefix":"/upload", "handler":"upload"
    },
    { // see modules/subrequests.c
        "prefix":"/subreq", "handler":"subreq"
    },
    { // see modules/subrequests.c
        "prefix":"/curtime", "handler":"curtime",
        "filters":[
        {"type":"file_cache", "cache_dir":"cache/curtime"}
        ]
    },

    { // see modules/subrequests.c
        "prefix":"/captcha", "handler":"captcha",
        "filters":[
        {"type":"draw"}
        ]
    },

    {
        "prefix":"/backend1", "handler":"http_proxy", "backend":"backend1",
        "uri":"", // prepend this uri prefix to path info
        "proxy_copy_host":true, // copy host header from original request
        "filters":[
        {"type":"file_cache", "cache_dir":"cache/proxy"},
        {"type":"templates"},
        {"type":"ssi"},
        {"type":"gzip", "compression":4, "cache_dir":"cache/gzip"}
        ]
    },
    {
        "prefix":"/backend2", "handler":"http_proxy", "backend":"backend2",
        "uri":"", // prepend this uri prefix to path info
        "proxy_copy_host":true, // copy host header from original request
        "filters":[
        {"type":"file_cache", "cache_dir":"cache/proxy"},
        {"type":"templates"},
        {"type":"ssi"},
        {"type":"gzip", "compression":4, "cache_dir":"cache/gzip"}
        ]
    },

    {
        "prefix":null, // null matches all requests
        "handler":"sendfile",
        // "vhost":".some.host.com", // match only at this host
        // "secure_only":true, // match under https connection only
        // "insecure_only":true, // match under http (not https) connection only
        "dir":"www", // aka document root
        "memcache":true, // cache small files in memory
        "charset":"utf-8", // charset for text files
        "index_file":"index.htm", // directory index
        "filters":[
        {"type":"templates"},
        {"type":"ssi"},
        {"type":"image", "cache_dir":"cache/img"},
        {"type":"gzip", "compression":4, "cache_dir":"cache/gzip"}
        ]
    },
    {
        "prefix":"/py", "handler":"python3",
        "uri":"/py",
        "proxy_copy_host":true, // copy host header from original request
        "dir":"cache/upload_temp", // temp dir for large uploads
        "size":50000000 /* 50 Mb */, // max upload size
        "filters":[
        {"type":"file_cache", "cache_dir":"cache/python3"},
        {"type":"templates"},
        {"type":"ssi"},
        {"type":"gzip", "compression":4, "cache_dir":"cache/gzip"}
        ]
    }

    ]
}
